{"ast":null,"code":"var _jsxFileName = \"/Users/mitsu/Documents/Coding/Express/CapitalCities/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\n// import CountryRow from './CountryRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst searchForAll = 'http://localhost:3000/api';\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [country, setCountry] = useState('');\n  const [city, setCity] = useState('...');\n  const [citiesList, setCitiesList] = useState([]);\n  const [dataList, setDataList] = useState([]);\n  const dataArray = [];\n  useEffect(() => {\n    getAllTheData();\n  }, []);\n  const getAllTheData = () => {\n    fetch(searchForAll, {\n      mode: \"cors\"\n    }).then(res => res.json()).then(data => {\n      data.map(response => {\n        if (response.name.common !== undefined & response.capital !== undefined) {\n          // countriesArray.push(response.name.common);\n          // citiesArray.push(response.capital);\n          dataArray.push(response);\n        } else {\n          console.log('response was undefined');\n        }\n      });\n      // setCountriesList(countriesArray);\n      // setCitiesList(citiesArray);\n      setDataList(dataArray);\n      // console.log(dataArray[0].name.common);\n      // console.log(dataArray[0].capital[0]);\n    });\n  };\n\n  useEffect(() => {\n    dataList.map(data => {\n      if (data.name.common == country) {\n        setCity(data.capital);\n      }\n      return country;\n    });\n  }, [country]);\n  function changeCountry(e) {\n    setCountry(e.target.value);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"The capital city of\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => changeCountry(e),\n        children: dataList.map(resp => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: resp.name.common,\n          children: resp.name.common\n        }, resp.name.common, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"is \", city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JCwwok/+Lk0c64gRkX5Hw+wX8VU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","searchForAll","App","_s","data","setData","country","setCountry","city","setCity","citiesList","setCitiesList","dataList","setDataList","dataArray","getAllTheData","fetch","mode","then","res","json","map","response","name","common","undefined","capital","push","console","log","changeCountry","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","resp","_c","$RefreshReg$"],"sources":["/Users/mitsu/Documents/Coding/Express/CapitalCities/client/src/App.js"],"sourcesContent":["\nimport { useEffect, useState } from 'react';\n// import CountryRow from './CountryRow';\n\n\nconst searchForAll = 'http://localhost:3000/api';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [country, setCountry] = useState('');\n  const [city, setCity] = useState('...');\n  const [citiesList, setCitiesList] = useState([]);\n  const [dataList, setDataList] = useState([]);\n\n  const dataArray = [];\n\n  useEffect(() => {\n    getAllTheData();\n  }, [])\n\n  const getAllTheData = () => {\n    fetch(searchForAll, {\n      mode: \"cors\"\n    })\n    .then(res => res.json())\n    .then(\n            data => {\n            data.map(response => {\n              if (response.name.common !== undefined & response.capital !== undefined) {\n                // countriesArray.push(response.name.common);\n                // citiesArray.push(response.capital);\n                dataArray.push(response);\n              }\n              else {\n                console.log('response was undefined')\n              }\n              \n            })\n            // setCountriesList(countriesArray);\n            // setCitiesList(citiesArray);\n            setDataList(dataArray);\n            // console.log(dataArray[0].name.common);\n            // console.log(dataArray[0].capital[0]);\n          }\n    )\n  }\n\n\n  useEffect(() => {\n    dataList.map(\n      data => {\n        if(data.name.common == country) {\n          setCity(data.capital)\n        }\n        return country\n       }\n      \n      )\n      \n  }, [country]);\n\n  function changeCountry (e) {\n    setCountry(e.target.value)\n  };\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>The capital city of</div>\n          <select onChange={e => changeCountry(e)}>\n            {dataList.map(resp => (\n              <option key = {resp.name.common}value={resp.name.common}>{resp.name.common}</option>\n            ))}\n          </select>\n        <div>is {city}</div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}