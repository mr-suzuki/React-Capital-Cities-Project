{"ast":null,"code":"var _jsxFileName = \"/Users/mitsu/Documents/Coding/Express/CapitalCities/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\n// import CountryRow from './CountryRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst searchForAll = 'http://localhost:3000/api';\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [country, setCountry] = useState([]);\n  const [city, setCity] = useState('London');\n  const countriesArray = [];\n  const citiesArray = [];\n\n  // useEffect(() => {\n  //       fetch(searchForAll, {\n  //         mode: \"cors\"\n  //       })\n  //       .then(res => res.json())\n  //       .then(\n  //               data => {\n  //               data.map(response => {\n  //                 if (response.name.common !== undefined & response.capital !== undefined) {\n  //                   // setCountry(response.name.common);\n  //                   // setCity(response.capital);\n  //                   countriesArray.push(response.name.common);\n  //                   citiesArray.push(response.capital);\n  //                   // setCountry(response.name.common);\n  //                   // console.log(countriesArray);\n  //                 }\n  //                 else {\n  //                   console.log('response was undefined')\n  //                 }\n  //               })\n  //             }\n  //       )\n\n  // }, []);\n\n  useEffect(() => {\n    getAllTheData();\n    console.log(countriesArray);\n  }, []);\n  const getAllTheData = () => {\n    fetch(searchForAll, {\n      mode: \"cors\"\n    }).then(res => res.json()).then(data => {\n      data.map(response => {\n        if (response.name.common !== undefined & response.capital !== undefined) {\n          // setCountry(response.name.common);\n          // setCity(response.capital);\n          countriesArray.push(response.name.common);\n          citiesArray.push(response.capital);\n          // setCountry(response.name.common);\n          // console.log(countriesArray);\n        } else {\n          console.log('response was undefined');\n        }\n      });\n    });\n  };\n\n  // useEffect(() => {\n  //   fetch(`https://restcountries.com/v3.1/name/${country}`, {\n  //     mode: \"cors\", \n  //     credentials: \"include\",\n  //     headers: {\n  //       \"Access-Control-Allow-Headers\": \"*\",\n  //       \"Access-Control-Allow-Origin\": \"*\",\n  //       \"Access-Control-Allow-Methods\": \"*\"\n  //     }\n  //   })\n  //   .then(res => console.log(res))\n  // }, [country]);\n\n  // function changeCountry (e) {\n  //   setCountry(e.target.value)\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"The capital city of\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [\"for (i in citiesArray) \", /*#__PURE__*/_jsxDEV(\"option\", {\n          value: citiesArray[i],\n          children: citiesArray[i]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), citiesArray.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: citiesArray,\n          children: citiesArray\n        }, citiesArray, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 40\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"is \", city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"elOGmi3HK5LIzT3UKsIM3U0ACJA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","searchForAll","App","_s","data","setData","country","setCountry","city","setCity","countriesArray","citiesArray","getAllTheData","console","log","fetch","mode","then","res","json","map","response","name","common","undefined","capital","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","i","option","_c","$RefreshReg$"],"sources":["/Users/mitsu/Documents/Coding/Express/CapitalCities/client/src/App.js"],"sourcesContent":["\nimport { useEffect, useState } from 'react';\n// import CountryRow from './CountryRow';\n\n\nconst searchForAll = 'http://localhost:3000/api';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [country, setCountry] = useState([]);\n  const [city, setCity] = useState('London');\n\n  const countriesArray = [];\n  const citiesArray = [];\n\n  // useEffect(() => {\n  //       fetch(searchForAll, {\n  //         mode: \"cors\"\n  //       })\n  //       .then(res => res.json())\n  //       .then(\n  //               data => {\n  //               data.map(response => {\n  //                 if (response.name.common !== undefined & response.capital !== undefined) {\n  //                   // setCountry(response.name.common);\n  //                   // setCity(response.capital);\n  //                   countriesArray.push(response.name.common);\n  //                   citiesArray.push(response.capital);\n  //                   // setCountry(response.name.common);\n  //                   // console.log(countriesArray);\n  //                 }\n  //                 else {\n  //                   console.log('response was undefined')\n  //                 }\n  //               })\n  //             }\n  //       )\n        \n  // }, []);\n\n  useEffect(() => {\n    getAllTheData();\n    console.log(countriesArray);\n  }, [])\n\n  const getAllTheData = () => {\n    fetch(searchForAll, {\n      mode: \"cors\"\n    })\n    .then(res => res.json())\n    .then(\n            data => {\n            data.map(response => {\n              if (response.name.common !== undefined & response.capital !== undefined) {\n                // setCountry(response.name.common);\n                // setCity(response.capital);\n                countriesArray.push(response.name.common);\n                citiesArray.push(response.capital);\n                // setCountry(response.name.common);\n                // console.log(countriesArray);\n              }\n              else {\n                console.log('response was undefined')\n              }\n            })\n          }\n    )\n  }\n\n\n  // useEffect(() => {\n  //   fetch(`https://restcountries.com/v3.1/name/${country}`, {\n  //     mode: \"cors\", \n  //     credentials: \"include\",\n  //     headers: {\n  //       \"Access-Control-Allow-Headers\": \"*\",\n  //       \"Access-Control-Allow-Origin\": \"*\",\n  //       \"Access-Control-Allow-Methods\": \"*\"\n  //     }\n  //   })\n  //   .then(res => console.log(res))\n  // }, [country]);\n\n  // function changeCountry (e) {\n  //   setCountry(e.target.value)\n  // };\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>The capital city of</div>\n          <select>\n            for (i in citiesArray) {\n              <option key = {i} value = {citiesArray[i]}>{citiesArray[i]}</option>\n            }\n            {citiesArray.map(option => <option key = {citiesArray} value={citiesArray}>{citiesArray}</option>)}\n            \n          </select>\n        <div>is {city}</div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}